[doc Sanity check]

[shell cli]
    !make -C ../ start
    ???Eshell
    ???1>
    ???[info] Application transaktion started

    !Settings = #{ backend => file_backend,
    !              name    => db1 }.
    ???>

    # Actual test...
    !{ok, Th} = trans_api:create(Settings).
    ???[info] New transaction created
    ???>

    !trans_api:add(Th, {tab, {k1, v1}}).
    ???{ok,key_added,k1}
    ???>

    !trans_api:read(Th, {tab, k1}).
    ???{ok,value,{set,v1}}
    ???>

    !trans_api:add(Th, {tab, {k2, v2}}).
    ???{ok,key_added,k2}
    ???>

    !trans_api:debug(Th).
    ???[info] Table: tab
    ???[info]   Key: k1, Value: {set,v1}
    ???[info]   Key: k2, Value: {set,v2}
    ???>

    !trans_api:commit(Th).
    ???db_core commit
    ???>

    !trans_api:delete(Th, {tab, k1}).
    ???{ok,key_deleted,k1}
    ???>

    !trans_api:debug(Th).
    ???[info] Table: tab
    ???[info]   Key: k1, Value: delete
    ???[info]   Key: k2, Value: {set,v2}
    ???>

    # commit delete
    !trans_api:commit(Th).
    ???db_core commit
    ???>

    !trans_api:discard(Th).
    ???{ok,transaction_discarded}
    ???>

    !{ok, Th2} = trans_api:create(Settings).
    ???[info] New transaction created
    ???>

    # now, only k2 should be visible, not k1
    !trans_api:debug_merge(Th2).
    ???[info] Table: tab
    ???[info]   Key: k2, Value: v2

    !q().
    ?SH-PROMPT:

    !echo ==$?==
    ?==0==
    !exit
    [endshell]

[cleanup]
    !rm -rf db_file